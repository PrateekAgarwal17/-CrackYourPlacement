/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
    ListNode*reverse(ListNode*head){
        ListNode*curr = head;
        ListNode *next  = NULL;
        ListNode *prev = NULL;
        while(curr!=NULL){
            next = curr->next;
            curr->next = prev;
            prev = curr;
            curr = next;
        }
        return prev;
    }
public:
    ListNode* removeNthFromEnd(ListNode* head, int n) {

        ListNode *temp = head;
        temp = reverse(temp);
        ListNode*ans = temp;
        if (n==1){
            temp = temp->next;
            return reverse(temp);
        }
        int i =1;
        while(i<(n-1)){
            i++;
            temp = temp->next;
        }
        temp->next = temp->next->next;
        return reverse(ans);
        
    }
};
