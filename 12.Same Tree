/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
void inorder(TreeNode *root,vector<int>&ans){
    if(root==NULL){
    ans.push_back(10000);
    return ;
    }
    inorder(root->left , ans);
    ans.push_back(root->val);
    inorder(root->right , ans);
}
void preorder(TreeNode *root,vector<int>&ans){
    if(root==NULL){
    ans.push_back(10000);
    return ;}
    ans.push_back(root->val);
    preorder(root->left , ans);
    preorder(root->right , ans);
}
    bool isSameTree(TreeNode* p, TreeNode* q) {
        if(p==NULL && q == NULL)
        return true;
        vector<int>a1,b1;
        vector<int>a2,b2;
        inorder(p,a1);
        inorder(q,a2);
        preorder(p,b1);
        preorder(q,b2);
        if(a1==a2 && b1 == b2)
        return true;
        else
        return false;
    }
};
